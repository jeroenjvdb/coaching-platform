{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["$(function () {\r\n    $.ajaxSetup({\r\n        headers: { 'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content') }\r\n    });\r\n\r\n    var Stopwatch = function(elem, options ) {\r\n\r\n        var timer       = createTimer(),\r\n            startButton = createButton(\"start\", start),\r\n            stopButton  = createButton(\"stop\", stop),\r\n            resetButton = createButton(\"reset\", reset),\r\n            splitButton = createButton(\"split\", split),\r\n            offset,\r\n            clock,\r\n            interval,\r\n            url = options.url || '/s3/stopwatch/1/time';//,\r\n\r\n        var time;\r\n        this.clock   = 0;\r\n\r\n\r\n\r\n        // default options\r\n        options = options || {};\r\n        options.delay = options.delay || 1;\r\n\r\n        // append elements\r\n        elem.appendChild(timer);\r\n        elem.appendChild(startButton);\r\n        elem.appendChild(stopButton);\r\n        elem.appendChild(resetButton);\r\n        elem.appendChild(splitButton);\r\n\r\n        // initialize\r\n        reset();\r\n\r\n        // private functions\r\n        function createTimer() {\r\n            return document.createElement(\"span\");\r\n        }\r\n\r\n        function createButton(action, handler) {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"#\" + action;\r\n            a.setAttribute('class',  action);\r\n            a.innerHTML = action;\r\n            a.addEventListener(\"click\", function(event) {\r\n                handler();\r\n                event.preventDefault();\r\n            });\r\n            return a;\r\n        }\r\n\r\n        function start() {\r\n            if (!interval) {\r\n                offset = Date.now();\r\n                interval = setInterval(update, options.delay);\r\n                if( options.is_paused ) {\r\n                    options.is_paused = false;\r\n                    send();\r\n                }\r\n            }\r\n        }\r\n\r\n        function startTimer() {\r\n            options.is_paused = false;\r\n            send();\r\n            start();\r\n        }\r\n\r\n        function stop() {\r\n            if (interval) {\r\n                time = clock;\r\n                clearInterval(interval);\r\n                interval = null;\r\n                options.is_paused = true;\r\n                send();\r\n            }\r\n        }\r\n\r\n        function reset() {\r\n            clock = 0;\r\n\r\n            if(! options.is_base3) {\r\n                if (options.startClock) {\r\n                    clock = parseInt(options.startClock);\r\n                    if (options.lastTime && !options.is_paused) {\r\n                        clock = clock + ( new Date().getTime() - options.lastTime );\r\n                    }\r\n                }\r\n                if (!options.is_paused) {\r\n                    start();\r\n                }\r\n            }\r\n\r\n            render();\r\n        }\r\n\r\n        function update() {\r\n            clock += delta();\r\n            getTime();\r\n            render();\r\n        }\r\n\r\n        function render() {\r\n            var s = Math.round(clock);\r\n\r\n            if(options.is_base3) {\r\n                if(s > 1000)  {\r\n                    strokes = 180 / (s/1000);\r\n                    timer.innerHTML = Math.round(strokes);\r\n\r\n                } else {\r\n                    timer.innerHTML = 180;\r\n                }\r\n            } else {\r\n\r\n\r\n                timer.innerHTML = timeToString(s);\r\n            }\r\n        }\r\n\r\n        function delta() {\r\n            var now = Date.now(),\r\n                d   = now - offset;\r\n\r\n            offset = now;\r\n            return d;\r\n        }\r\n\r\n        function timeToString(s) {\r\n            var ms = s % 1000;\r\n            var hundredth = Math.round(ms/10);\r\n            s = (s - ms) / 1000;\r\n            var secs = s % 60;\r\n            s = (s - secs) / 60;\r\n            var mins = s % 60;\r\n            var hrs = (s - mins) / 60;\r\n\r\n            return hrs + ':' + mins + ':' + secs + '.' + hundredth;\r\n\r\n        }\r\n\r\n        function getTime() {\r\n            //console.log(clock);\r\n            this.clock = clock;\r\n        }\r\n\r\n        function split() {\r\n            send();\r\n        }\r\n\r\n        function send() {\r\n            if(! options.is_base3) {\r\n                options.clock = clock;\r\n                options.dt = Date.now();\r\n\r\n                $.post(url, options, function(data){\r\n                    console.log(data);\r\n                    appendSplit(data.time)\r\n                }, 'json');\r\n            }\r\n        }\r\n\r\n        function appendSplit(time) {\r\n            console.log(time);\r\n            var splits = $('ul#splits');\r\n            console.log(splits);\r\n            splits.prepend('<li>' + timeToString(time) + '</li>');\r\n        }\r\n\r\n        this.clock = function(){\r\n            return clock;\r\n        }\r\n\r\n        // public API\r\n        this.start  = start;\r\n        this.stop   = stop;\r\n        this.reset  = reset;\r\n        this.split  = split;\r\n    };\r\n\r\n    var elems = $(\".stopwatch\");\r\n    console.log(elems);\r\n    var stopwatches = [];\r\n\r\n    for (var i=0, len=elems.length; i<len; i++) {\r\n        console.log();\r\n        var swOptions = {\r\n            stopwatch_id: stopwatch_id,\r\n            user_id: user_id,\r\n            url: stopwatch_store,\r\n            startClock: clock,\r\n            lastTime: lastTime,\r\n            is_paused: is_paused,\r\n            is_base3: $(elems[i]).data('base3'),\r\n        };\r\n\r\n        stopwatches[i] = new Stopwatch(elems[i], swOptions);\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}